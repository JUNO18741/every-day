import React, { useState, useEffect } from 'react';

// Counter组件，接收count，setCount状态和销毁组件的回调函数onDestroy作为props
function Counter({ count, setCount, onDestroy }) {
  // 使用useEffect启动定时器
  useEffect(() => {
    const timer = setInterval(() => {
      // 定时器每秒执行一次，将count状态加一
      setCount(prevCount => prevCount + 1);
    }, 1000); 

    // 在组件卸载时清除定时器
    return () => {
      clearInterval(timer);
    };
  }, [setCount]);

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={onDestroy}>销毁组件</button>
    </div>
  );
}

function App() {
  // 将count状态提升到App组件，使其在Counter组件销毁后仍然可以被保存和访问
  const [count, setCount] = useState(0);
  // showCounter状态用于控制Counter组件是否显示
  const [showCounter, setShowCounter] = useState(true);

  const handleDestroy = () => {
    // 在销毁按钮点击后，隐藏Counter组件
    setShowCounter(false);
  };

  const handleRecreate = () => {
    // 在重新创建按钮点击后，显示Counter组件
    setShowCounter(true);
  };

  return (
    <div>
      {/* 根据showCounter状态决定是否渲染Counter组件，并传递count，setCount，和handleDestroy作为props */}
      {showCounter ? <Counter count={count} setCount={setCount} onDestroy={handleDestroy} /> : null}
      <button onClick={handleRecreate}>重新创建组件</button>
    </div>
  );
}

export default App;
